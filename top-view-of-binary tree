import java.util.*;

class BinaryTree {
    
    public Node root = null;
    
}

class Node {
    int data;
    Node left;
    Node right;
    
    Node(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}

public class Main {
    
    public static int height(Node node) {
        if(node == null) 
            return 0;
        int lh = height(node.left);
        int rh = height(node.right);
        
        return 1+(lh > rh ? lh:rh);
    }
    
    
    public static void getTopView(Node node, TreeMap<Integer, Integer> map, int level, int dis) {
        if(node == null)
            return;
        
        if(level == 0) {
            if(!map.containsKey(dis))
                map.put(dis, node.data);
            
        }
        
        getTopView(node.left, map, level-1, dis-1);
        getTopView(node.right, map, level-1, dis+1);
    }
    
    public static void printMap(TreeMap<Integer, Integer> map) {
        for(Map.Entry m : map.entrySet()) {
	        System.out.print( m.getValue()+ " ");
	    }
    }
    
	public static void main(String[] args) {
	    
	    BinaryTree tree = new BinaryTree();
	    tree.root = new Node(1);
	    tree.root.left = new Node(2);
	    tree.root.right = new Node(3);
	    tree.root.left.right = new Node(4);
	    tree.root.left.right.right = new Node(5);
	    tree.root.left.right.right.right = new Node(6);
	    
	    TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>();
	    
	    int h = height(tree.root);
	    for(int i = 0; i < h; i++) {
	       getTopView(tree.root, map, i, 0); 
	    }
	    
	   printMap(map);
 	}
}
